#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
from fakeclassRdm import fakeRdm, fakeReadXMLString, fakeReadXMLFile
from classRdm import *
import function

string = """<?xml version='1.0' encoding='UTF-8'?>
<data pyBar="http://open.btp.free.fr/?/pyBar" version="2.4">
  <elem id="node">
    <node d="0,0" id="N1" liaison="2" />
    <node d="0,1" id="N2" />
    <node d="1,1" id="N3" />
    <node d="1,0" id="N4" liaison="1" />
    <arc d="0.5" id="N5" name="B5" pos_on_curve="true" r="0" />
    <arc d="0.4999" id="N6" name="B6" pos_on_curve="true" r="0" />
  </elem>
  <elem id="barre">
    <barre end="N2" id="B1" r0="1" r1="1" start="N1" />
    <barre end="N3" id="B2" r0="1" r1="1" start="N2" />
    <barre end="N4" id="B3" r0="1" r1="1" start="N3" />
    <barre end="N4" id="B4" r0="1" r1="1" start="N1" />
    <mbarre end="N4" id="B5" r0="0" r1="0" start="N2" />
    <mbarre end="N3" id="B6" r0="0" r1="0" start="N1" />
    <barre end="N6" id="B7" r0="1" r1="0" start="N5" />
  </elem>
  <elem id="geo">
    <barre h="0.1" id="*" igz="1e-08" profil="" s="0.001" v="0.05" />
    <barre h="" id="B7" igz="1" profil="" s="1000" v="" />
  </elem>
  <elem id="material">
    <barre id="*" young="2100000000" />
  </elem>
  <elem id="char">
    <case id="cas 1">
      <pp d="false" />
      <node d="-20000,0.0,0.0" id="N2" />
    </case>
  </elem>
  <elem id="combinaison">
    <combinaison d="2.0" id="combi1" />
  </elem>
  <elem id="prefs">
    <unit d="1.0" id="C" />
    <unit d="1.0" id="E" />
    <unit d="1.0" id="F" />
    <unit d="1.0" id="I" />
    <unit d="1.0" id="M" />
    <unit d="1.0" id="L" />
    <unit d="1.0" id="S" />
    <const g="9.81" />
    <conv conv="1.0" />
  </elem>
  <draw id="prefs">
    <drawing axis="false" bar_name="true" node_name="true" scale="338.0" scale_pos="104.0,80.0,76,25" show_title="true" status="7,0" title="198.0,398.0,127,23,treillis2" x0="148.0" y0="438.0" />
  </draw>
</data>"""

# Lecture des données soit à partir d'un fichier

#xml = fakeReadXMLFile("/home/.../pyBar/fichier.dat")

# soit à partir d'une chaine de caractère contenant du xml

xml = fakeReadXMLString(string)


rdm = fakeRdm(xml)
rdm.struct.PrintErrorConsole()


# les données géométrique se trouvent dans rdm.struct
# print rdm.struct.Sections

# récupération du cas à partir du numéro
Char = rdm.GetCharByNumber(0)
#print Char.EndBarSol # sollicitation aux bouts des barres

# Degré de liberté
print "DDL=", Char.ddlValue['N5']
print "DDL=", Char.ddlValue['N6']

# Récupération des contraintes normales aux fibres sup et inf
print rdm.GetSigma(Char, 0., "B1")

# réactions d'appuis
print "Reactions dans cas1=", Char.Reactions

# Récupération d'un cas de charge ou d'une combinaison à partir du nom
print "Reactions dans la combinaison =", rdm.Combis['combi1'].Reactions
#print rdm.Combis['combinaison'].EndBarSol

